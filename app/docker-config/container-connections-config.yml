doctrine:
  dbal:
    connections:
      default:
        host: '%env(MYSQL_HOST)%'
        port: %env(int:MYSQL_PORT)% # internal network communication via port 3306.
        dbname: '%env(MYSQL_DATABASE)%'
        user: '%env(MYSQL_USER)%'
        password: '%env(MYSQL_PASSWORD)%'
#
# enable if you want to use doctrine:
#  orm:
#    auto_generate_proxy_classes: "%kernel.debug%"
#    default_entity_manager: default
#    entity_managers:
#      default:
#        connection: default
#        auto_mapping: true

#
# See http://blog.michaelperrin.fr/2018/08/14/redis-session-handling-in-symfony/
# See https://github.com/michaelperrin/blog-symfony-redis-session
# See https://github.com/symfony/symfony/blob/5.1/src/Symfony/Component/HttpFoundation/Session/Storage/Handler/RedisSessionHandler.php
#
services:
  Redis:
    class: Redis
    calls:
      - method: connect
        arguments:
          - '%env(REDIS_CACHE_HOST)%'
          - '%env(int:REDIS_CACHE_PORT)%'

  Symfony\Component\HttpFoundation\Session\Storage\Handler\RedisSessionHandler:
    arguments:
      - '@Redis'

framework:
  session:
    handler_id: Symfony\Component\HttpFoundation\Session\Storage\Handler\RedisSessionHandler

pimcore:
  cache:
    pools:
      redis:
        enabled: true
        connection:
          server: '%env(REDIS_SESSION_HOST)%'
          port: '%env(int:REDIS_SESSION_PORT)%'
          database: 14
